name: Build Executable
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
permissions:
    contents: write
jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pygame pyinstaller pytest
            - name: Run tests (Linux/macOS)
              if: runner.os != 'Windows'
              run: |
                  export PYTHONPATH=$PYTHONPATH:$(pwd)/app
                  pytest
            - name: Run tests (Windows)
              if: runner.os == 'Windows'
              run: |
                $env:PYTHONPATH="$env:PYTHONPATH;$(Get-Location)\app"
                pytest
              shell: pwsh
            - name: Build executable with PyInstaller
              run: |
                  pyinstaller --onefile --name Pandemic app/main.py
            - name: Rename executable for identification
              run: |
                  if [ "${{ runner.os }}" = "Linux" ]; then
                    mv dist/Pandemic dist/Pandemic-linux
                  elif [ "${{ runner.os }}" = "macOS" ]; then
                    mv dist/Pandemic dist/Pandemic-macos
                  elif [ "${{ runner.os }}" = "Windows" ]; then
                    mv dist/Pandemic.exe dist/Pandemic-windows.exe
                  fi
              shell: bash
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: pandemic-executable-${{ matrix.os }}
                  path: dist/Pandemic*
                  
    release:
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts
            - name: List downloaded artifacts (debug)
              run: |
                  echo "Estrutura dos artifacts baixados:"
                  find artifacts -type f -name "*" | head -20
                  echo "Conteúdo detalhado:"
                  ls -la artifacts/*/
            - name: Prepare release files
              run: |
                  mkdir -p release-files
                  find artifacts -name "Pandemic*" -type f -exec cp {} release-files/ \;
                  echo "Arquivos preparados para release:"
                  ls -la release-files/
            - name: Delete existing release
              run: |
                  gh release delete latest --yes || true
                  git tag -d latest || true
                  git push origin :refs/tags/latest || true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  name: "Latest Release"
                  tag_name: "latest"
                  files: release-files/*
                  body: |
                      Executáveis atualizados automaticamente a partir do commit: ${{ github.sha }}
                      
                      **Arquivos disponíveis:**
                      - `Pandemic-linux` - Para sistemas Linux
                      - `Pandemic-macos` - Para sistemas macOS  
                      - `Pandemic-windows.exe` - Para sistemas Windows
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}